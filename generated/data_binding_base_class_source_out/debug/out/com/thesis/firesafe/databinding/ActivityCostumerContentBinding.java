// Generated by view binder compiler. Do not edit!
package com.thesis.firesafe.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.ncorti.slidetoact.SlideToActView;
import com.thesis.firesafe.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityCostumerContentBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final RelativeLayout bottomSheet;

  @NonNull
  public final FloatingActionButton cancel;

  @NonNull
  public final FloatingActionButton cancelLooking;

  @NonNull
  public final CardView containerCard;

  @NonNull
  public final ImageView drawerButton;

  @NonNull
  public final TextView driverCar;

  @NonNull
  public final LinearLayout driverInfo;

  @NonNull
  public final TextView driverName;

  @NonNull
  public final TextView driverPlate;

  @NonNull
  public final ImageView driverProfileImage;

  @NonNull
  public final LinearLayout locationLayout;

  @NonNull
  public final LinearLayout lookingLayout;

  @NonNull
  public final FloatingActionButton phone;

  @NonNull
  public final CardView placeFromContainer;

  @NonNull
  public final Button placeTo;

  @NonNull
  public final LinearLayout radioLayout;

  @NonNull
  public final TextView ratingText;

  @NonNull
  public final RecyclerView recyclerView;

  @NonNull
  public final SlideToActView request;

  @NonNull
  public final LinearLayout timeoutLayout;

  private ActivityCostumerContentBinding(@NonNull FrameLayout rootView,
      @NonNull RelativeLayout bottomSheet, @NonNull FloatingActionButton cancel,
      @NonNull FloatingActionButton cancelLooking, @NonNull CardView containerCard,
      @NonNull ImageView drawerButton, @NonNull TextView driverCar,
      @NonNull LinearLayout driverInfo, @NonNull TextView driverName, @NonNull TextView driverPlate,
      @NonNull ImageView driverProfileImage, @NonNull LinearLayout locationLayout,
      @NonNull LinearLayout lookingLayout, @NonNull FloatingActionButton phone,
      @NonNull CardView placeFromContainer, @NonNull Button placeTo,
      @NonNull LinearLayout radioLayout, @NonNull TextView ratingText,
      @NonNull RecyclerView recyclerView, @NonNull SlideToActView request,
      @NonNull LinearLayout timeoutLayout) {
    this.rootView = rootView;
    this.bottomSheet = bottomSheet;
    this.cancel = cancel;
    this.cancelLooking = cancelLooking;
    this.containerCard = containerCard;
    this.drawerButton = drawerButton;
    this.driverCar = driverCar;
    this.driverInfo = driverInfo;
    this.driverName = driverName;
    this.driverPlate = driverPlate;
    this.driverProfileImage = driverProfileImage;
    this.locationLayout = locationLayout;
    this.lookingLayout = lookingLayout;
    this.phone = phone;
    this.placeFromContainer = placeFromContainer;
    this.placeTo = placeTo;
    this.radioLayout = radioLayout;
    this.ratingText = ratingText;
    this.recyclerView = recyclerView;
    this.request = request;
    this.timeoutLayout = timeoutLayout;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityCostumerContentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityCostumerContentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_costumer_content, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityCostumerContentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bottomSheet;
      RelativeLayout bottomSheet = rootView.findViewById(id);
      if (bottomSheet == null) {
        break missingId;
      }

      id = R.id.cancel;
      FloatingActionButton cancel = rootView.findViewById(id);
      if (cancel == null) {
        break missingId;
      }

      id = R.id.cancel_looking;
      FloatingActionButton cancelLooking = rootView.findViewById(id);
      if (cancelLooking == null) {
        break missingId;
      }

      id = R.id.container_card;
      CardView containerCard = rootView.findViewById(id);
      if (containerCard == null) {
        break missingId;
      }

      id = R.id.drawerButton;
      ImageView drawerButton = rootView.findViewById(id);
      if (drawerButton == null) {
        break missingId;
      }

      id = R.id.driverCar;
      TextView driverCar = rootView.findViewById(id);
      if (driverCar == null) {
        break missingId;
      }

      id = R.id.driverInfo;
      LinearLayout driverInfo = rootView.findViewById(id);
      if (driverInfo == null) {
        break missingId;
      }

      id = R.id.driverName;
      TextView driverName = rootView.findViewById(id);
      if (driverName == null) {
        break missingId;
      }

      id = R.id.driverPlate;
      TextView driverPlate = rootView.findViewById(id);
      if (driverPlate == null) {
        break missingId;
      }

      id = R.id.driverProfileImage;
      ImageView driverProfileImage = rootView.findViewById(id);
      if (driverProfileImage == null) {
        break missingId;
      }

      id = R.id.location_layout;
      LinearLayout locationLayout = rootView.findViewById(id);
      if (locationLayout == null) {
        break missingId;
      }

      id = R.id.looking_layout;
      LinearLayout lookingLayout = rootView.findViewById(id);
      if (lookingLayout == null) {
        break missingId;
      }

      id = R.id.phone;
      FloatingActionButton phone = rootView.findViewById(id);
      if (phone == null) {
        break missingId;
      }

      id = R.id.place_from_container;
      CardView placeFromContainer = rootView.findViewById(id);
      if (placeFromContainer == null) {
        break missingId;
      }

      id = R.id.place_to;
      Button placeTo = rootView.findViewById(id);
      if (placeTo == null) {
        break missingId;
      }

      id = R.id.radioLayout;
      LinearLayout radioLayout = rootView.findViewById(id);
      if (radioLayout == null) {
        break missingId;
      }

      id = R.id.ratingText;
      TextView ratingText = rootView.findViewById(id);
      if (ratingText == null) {
        break missingId;
      }

      id = R.id.recyclerView;
      RecyclerView recyclerView = rootView.findViewById(id);
      if (recyclerView == null) {
        break missingId;
      }

      id = R.id.request;
      SlideToActView request = rootView.findViewById(id);
      if (request == null) {
        break missingId;
      }

      id = R.id.timeout_layout;
      LinearLayout timeoutLayout = rootView.findViewById(id);
      if (timeoutLayout == null) {
        break missingId;
      }

      return new ActivityCostumerContentBinding((FrameLayout) rootView, bottomSheet, cancel,
          cancelLooking, containerCard, drawerButton, driverCar, driverInfo, driverName,
          driverPlate, driverProfileImage, locationLayout, lookingLayout, phone, placeFromContainer,
          placeTo, radioLayout, ratingText, recyclerView, request, timeoutLayout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
